[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yumi-sugoi"
version = "2.0.0"
description = "An advanced Discord bot with AI capabilities, custom personas, and comprehensive management features"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Yumi Sugoi Team"},
]
maintainers = [
    {name = "Yumi Sugoi Team"},
]
keywords = [
    "discord",
    "bot", 
    "ai",
    "chatbot",
    "personas",
    "ollama",
    "transformers"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "discord.py>=2.3.2",
    "transformers>=4.36.2", 
    "python-dotenv>=1.0.0",
    "torch>=2.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.3",
    "Flask>=2.3.0",
    "Flask-SocketIO>=5.3.0",
    "Pillow>=10.0.0",
    "flask-cors>=4.0.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "flask-sqlalchemy>=3.0.0",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
api = [
    "gunicorn>=21.0.0",
    "uvicorn>=0.23.0",
]
docker = [
    "docker>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/Yumi-Sugoi"
Documentation = "https://github.com/yourusername/Yumi-Sugoi/wiki"
Repository = "https://github.com/yourusername/Yumi-Sugoi"
"Bug Tracker" = "https://github.com/yourusername/Yumi-Sugoi/issues"
Changelog = "https://github.com/yourusername/Yumi-Sugoi/blob/main/CHANGELOG.md"

[project.scripts]
yumi-bot = "bot_core.main:run"
yumi-api = "api:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["bot_core*", "api*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
bot_core = ["templates/*", "static/*", "*.json", "*.txt"]
api = ["*.json", "*.sql"]
datasets = ["*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.coverage.run]
source = ["bot_core", "api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
